####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
#
# Before building the container image run:
#
# ./mvnw package -Dnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/kubernetes-quarkus .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/kubernetes-quarkus
#
###
FROM quay.io/quarkus/ubi-quarkus-mandrel-builder-image:22.1-java17 AS build
WORKDIR /project

# Copiar el código fuente y el archivo de configuración de Maven
COPY src /project/src
COPY pom.xml /project/pom.xml

# Instalar Maven 3.9
USER root
RUN microdnf install -y curl tar gzip \
    && curl -fsSL https://downloads.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz -o /tmp/apache-maven-3.9.0-bin.tar.gz \
    && tar -xzf /tmp/apache-maven-3.9.0-bin.tar.gz -C /opt \
    && rm /tmp/apache-maven-3.9.0-bin.tar.gz

# Configurar variables de entorno para Maven
ENV MAVEN_HOME=/opt/apache-maven-3.9.8
ENV PATH=${MAVEN_HOME}/bin:${PATH}

# Compilar la aplicación en un binario nativo
RUN mvn clean package -Pnative -Dnative-image.docker-build=true

# Usar una imagen base más ligera para ejecutar la aplicación nativa
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.9
WORKDIR /work/
COPY --from=build /project/target/*-runner /work/application

EXPOSE 8080
USER 1001

ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
